<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="ımageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="ımageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAACe
        CQAAAk1TRnQBSQFMAgEBAgEAARABAAEQAQABEAEAARABAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABEAMAAQEBAAEgBgABEBIAAxwBJwFIAU8BswHdAUMBTAHHAekDJwE5IAADJwE5AUMBTAHHAekBSAFP
        AbMB3QIbARwBJhgAAykBPQFTAaMBUAH0AVMBowFQAfQDKQE9mAABSgFQAa8B2gE2AUMB9AH/ATYBQwH0
        Af8BQAFJAdcB8QMnATkYAAMnATkBQAFJAdcB8QE2AUMB9AH/ATYBQwH0Af8BSgFQAa8B2hgAAUIBRwFC
        AXQBUAGvAUwB/wFQAa8BTAH/AUIBRwFCAXSYAAFHAU8BuQHhATYBQwH0Af8BNgFDAfQB/wE2AUMB9AH/
        AUABSQHXAfEDJwE5EAADJwE5AUABSQHXAfEBNgFDAfQB/wE2AUMB9AH/ATYBQwH0Af8BRwFPAbkB4RgA
        AUIBRwFCAXQBUAGvAUwB/wFQAa8BTAH/AUIBRwFCAXSYAAMhAS8BQwFMAc4B6wE2AUMB9AH/ATYBQwH0
        Af8BNgFDAfQB/wFAAUkB1wHxAycBOQgAAycBOQFAAUkB1wHxATYBQwH0Af8BNgFDAfQB/wE2AUMB9AH/
        AUMBTAHOAesCIQEiATAYAAFCAUcBQgF0AVABrwFMAf8BUAGvAUwB/wFCAUcBQgF0nAADIQEvAUMBTAHO
        AesBNgFDAfQB/wE2AUMB9AH/ATYBQwH0Af8BQAFJAdcB8QMnATkDJwE5AUABSQHXAfEBNgFDAfQB/wE2
        AUMB9AH/ATYBQwH0Af8BQwFMAc4B6wIhASIBMBwAAUIBRwFCAXQBUAGvAUwB/wFQAa8BTAH/AUIBRwFC
        AXSgAAMhAS8BQwFMAc4B6wE2AUMB9AH/ATYBQwH0Af8BNgFDAfQB/wFAAUkB1wHxAUABSQHXAfEBNgFD
        AfQB/wE2AUMB9AH/ATYBQwH0Af8BQwFMAc4B6wIhASIBMCAAAUIBRwFCAXQBUAGvAUwB/wFQAa8BTAH/
        AUIBRwFCAXSkAAMhAS8BQwFMAc4B6wE2AUMB9AH/ATYBQwH0Af8BNgFDAfQB/wE2AUMB9AH/ATYBQwH0
        Af8BNgFDAfQB/wFDAUwBzgHrAiEBIgEwDAADKQE9AUIBRwFCAXQBQgFHAUIBdAFCAUcBQgF0AUIBRwFC
        AXQBQgFHAUIBdAFVAW0BVAGzAVABrwFMAf8BUAGvAUwB/wFVAW0BVAGzAUIBRwFCAXQBQgFHAUIBdAFC
        AUcBQgF0AUIBRwFCAXQBQgFHAUIBdAMpAT2QAAMhAS8BQwFMAc0B7AE2AUMB9AH/ATYBQwH0Af8BNgFD
        AfQB/wE2AUMB9AH/AUMBTAHNAewCIQEiATAQAAFTAaMBUAH0AVABrwFMAf8BUAGvAUwB/wFQAa8BTAH/
        AVABrwFMAf8BUAGvAUwB/wFQAa8BTAH/AVABrwFMAf8BUAGvAUwB/wFQAa8BTAH/AVABrwFMAf8BUAGv
        AUwB/wFQAa8BTAH/AVABrwFMAf8BUAGvAUwB/wFTAaMBUAH0kAADJwE5AUABSQHXAfEBNgFDAfQB/wE2
        AUMB9AH/ATYBQwH0Af8BNgFDAfQB/wFAAUkB1wHxAicBKAE6EAABUwGjAVAB9AFQAa8BTAH/AVABrwFM
        Af8BUAGvAUwB/wFQAa8BTAH/AVABrwFMAf8BUAGvAUwB/wFQAa8BTAH/AVABrwFMAf8BUAGvAUwB/wFQ
        Aa8BTAH/AVABrwFMAf8BUAGvAUwB/wFQAa8BTAH/AVABrwFMAf8BUwGjAVAB9IwAAycBOQFAAUkB1wHx
        ATYBQwH0Af8BNgFDAfQB/wE2AUMB9AH/ATYBQwH0Af8BNgFDAfQB/wE2AUMB9AH/AUABSQHXAfECJwEo
        AToMAAMpAT0BQgFHAUIBdAFCAUcBQgF0AUIBRwFCAXQBQgFHAUIBdAFCAUcBQgF0AVUBbQFUAbMBUAGv
        AUwB/wFQAa8BTAH/AVUBbQFUAbMBQgFHAUIBdAFCAUcBQgF0AUIBRwFCAXQBQgFHAUIBdAFCAUcBQgF0
        AykBPYgAAycBOQFAAUkB1wHxATYBQwH0Af8BNgFDAfQB/wE2AUMB9AH/AUMBTAHOAesBQwFMAc4B6wE2
        AUMB9AH/ATYBQwH0Af8BNgFDAfQB/wFAAUkB1wHxAicBKAE6IAABQgFHAUIBdAFQAa8BTAH/AVABrwFM
        Af8BQgFHAUIBdJwAAycBOQFAAUkB1wHxATYBQwH0Af8BNgFDAfQB/wE2AUMB9AH/AUMBTAHOAesCIQEi
        ATADIQEvAUMBTAHOAesBNgFDAfQB/wE2AUMB9AH/ATYBQwH0Af8BQAFJAdcB8QInASgBOhwAAUIBRwFC
        AXQBUAGvAUwB/wFQAa8BTAH/AUIBRwFCAXSYAAMnATkBQAFJAdcB8QE2AUMB9AH/ATYBQwH0Af8BNgFD
        AfQB/wFDAUwBzgHrAiEBIgEwCAADIQEvAUMBTAHOAesBNgFDAfQB/wE2AUMB9AH/ATYBQwH0Af8BQAFJ
        AdcB8QInASgBOhgAAUIBRwFCAXQBUAGvAUwB/wFQAa8BTAH/AUIBRwFCAXSYAAFGAU4BwwHmATYBQwH0
        Af8BNgFDAfQB/wE2AUMB9AH/AUMBTAHOAesDIQEvEAADIQEvAUMBTAHOAesBNgFDAfQB/wE2AUMB9AH/
        ATYBQwH0Af8BRgFOAcMB5hgAAUIBRwFCAXQBUAGvAUwB/wFQAa8BTAH/AUIBRwFCAXSYAAFLAVABpAHT
        ATYBQwH0Af8BNgFDAfQB/wFDAUwBzgHrAyEBLxgAAyEBLwFDAUwBzgHrATYBQwH0Af8BNgFDAfQB/wFL
        AVABowHTGAABQgFHAUIBdAFQAa8BTAH/AVABrwFMAf8BQgFHAUIBdJgAAxYBHgFOAVIBnwHOAUgBUQGz
        AdwCIQEiATAgAAMhAS8BSgFRAbIB2wFMAVMBnwHPAxYBHhgAAykBPQFTAaMBUAH0AVMBowFQAfQDKQE9
        mAABQgFNAT4HAAE+AwABKAMAAUADAAEQAwABAQEAAQEFAAGAFwAD/wEAAQ8B8AH8AT8EAAEHAeAB/AE/
        BAABAwHAAfwBPwQAAQEBgAH8AT8EAAGAAQEB/AE/BAABwAEDAfwBPwQAAeABBwYAAfABDwYAAfABDwYA
        AeABBwYAAcABAwH8AT8EAAGAAQEB/AE/BAABAQGAAfwBPwQAAQMBwAH8AT8EAAEHAeAB/AE/BAABDwHw
        AfwBPwQACw==
</value>
  </data>
</root>