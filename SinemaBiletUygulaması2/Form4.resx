<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="ımageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="ımageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAAi
        CgAAAk1TRnQBSQFMAgEBAgEAASABAAEgAQABEAEAARABAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABEAMAAQEBAAEgBgABEBoAAyMBMgJXAVgB9ANmAf8DZgH/A2YB/wNmAf8DZgH/A2YB/wNmAf8DZgH/
        A2IB8wMiATEIAAMcAScBUwFXAY8B3QFMAVEBqAHpAycBOSAAAycBOQFMAVEBqAHpAVMBVwGPAd0DGwEm
        iAADOQFdAm0BbgH/A8sB/wPSAf8DewH/A9AB/wPbAf8CcQF7Af8CVgHPAf8BYAFjAdgB/wJiAXoB/wM4
        AVsIAAFVAVkBjAHaATYBQwH0Af8BNgFDAfQB/wFHAVABwAHxAycBORgAAycBOQFHAVABwAHxATYBQwH0
        Af8BNgFDAfQB/wFVAVkBjAHaiAADOQFdAnYBdwH/A9gB/wPfAf8DhwH/A+QB/wPxAf8CdwGHAf8CcwHe
        Af8BggGEAeUB/wJgAYQB/wM4AVsIAAFTAVYBlwHhATYBQwH0Af8BNgFDAfQB/wE2AUMB9AH/AUcBUAHA
        AfEDJwE5EAADJwE5AUcBUAHAAfEBNgFDAfQB/wE2AUMB9AH/ATYBQwH0Af8BUwFWAZcB4YgAAzkBXQJj
        AWQB/wOhAf8DpQH/A28B/wOhAf8DpwH/AmsBbwH/AlIBogH/AVYBWAGpAf8CZAFvAf8DOAFbCAADIQEv
        AUwBUwGxAesBNgFDAfQB/wE2AUMB9AH/ATYBQwH0Af8BRwFQAcAB8QMnATkIAAMnATkBRwFQAcAB8QE2
        AUMB9AH/ATYBQwH0Af8BNgFDAfQB/wFMAVMBsQHrAyEBMIgAAzkBXQJrAWwB/wPFAf8DywH/A3gB/wPE
        Af8DzQH/A3gB/wPEAf8DzQH/A3cB/wM4AVsMAAMhAS8BTAFTAbEB6wE2AUMB9AH/ATYBQwH0Af8BNgFD
        AfQB/wFHAVABwAHxAycBOQMnATkBRwFQAcAB8QE2AUMB9AH/ATYBQwH0Af8BNgFDAfQB/wFMAVMBsQHr
        AyEBMIwAAzkBXQJ2AXcB/wPaAf8D5gH/A4cB/wPbAf8D4wH/A4cB/wPdAf8D4gH/A4MB/wM4AVsQAAMh
        AS8BTAFTAbEB6wE2AUMB9AH/ATYBQwH0Af8BNgFDAfQB/wFHAVABwAHxAUcBUAHAAfEBNgFDAfQB/wE2
        AUMB9AH/ATYBQwH0Af8BTAFTAbEB6wMhATCQAAM5AV0CZgFnAf8DrQH/A7IB/wNxAf8DrAH/A7IB/wNy
        Af8DqwH/A7IB/wNxAf8DOAFbFAADIQEvAUwBUwGxAesBNgFDAfQB/wE2AUMB9AH/ATYBQwH0Af8BNgFD
        AfQB/wE2AUMB9AH/ATYBQwH0Af8BTAFTAbEB6wMhATCUAAM5AV0CaQFqAf8DugH/A8AB/wN2Af8DuwH/
        A8IB/wN2Af8DvAH/A8UB/wN1Af8DOAFbGAADIQEvAUwBUQGzAewBNgFDAfQB/wE2AUMB9AH/ATYBQwH0
        Af8BNgFDAfQB/wFMAVEBswHsAyEBMJgAAzkBXQJ2AXcB/wPXAf8D6AH/A4cB/wPdAf8D5gH/A4cB/wPf
        Af8D5wH/A4MB/wM4AVsYAAMnATkBRwFQAcAB8QE2AUMB9AH/ATYBQwH0Af8BNgFDAfQB/wE2AUMB9AH/
        AUcBUAHAAfEDJwE6mAADOQFdAmgBaQH/A7MB/wO5Af8DdAH/A7QB/wO7Af8DdAH/A7QB/wO9Af8DcwH/
        AzgBWxQAAycBOQFHAVABwAHxATYBQwH0Af8BNgFDAfQB/wE2AUMB9AH/ATYBQwH0Af8BNgFDAfQB/wE2
        AUMB9AH/AUcBUAHAAfEDJwE6lAADOQFdAWABXgFbAf8BiQF7AWIB/wGNAX4BaQH/AY0BfgFpAf8BjQF+
        AWkB/wGNAX4BaQH/AY0BfgFpAf8BjQF+AWkB/wGNAX4BaQH/AWwBaQFmAf8DOAFbEAADJwE5AUcBUAHA
        AfEBNgFDAfQB/wE2AUMB9AH/ATYBQwH0Af8BTAFTAbEB6wFMAVMBsQHrATYBQwH0Af8BNgFDAfQB/wE2
        AUMB9AH/AUcBUAHAAfEDJwE6kAADOQFdAXIBaAFWAf8B2wGrAVkB/wHoAbUBcAH/AegBtQFwAf8B6AG1
        AXAB/wHoAbUBcAH/AegBtQFwAf8B6AG1AXAB/wHoAbUBcAH/AYABdgFoAf8DOAFbDAADJwE5AUcBUAHA
        AfEBNgFDAfQB/wE2AUMB9AH/ATYBQwH0Af8BTAFTAbEB6wMhATADIQEvAUwBUwGxAesBNgFDAfQB/wE2
        AUMB9AH/ATYBQwH0Af8BRwFQAcAB8QMnATqMAAM5AV0BcgFoAVYB/wHbAasBWQH/AegBtQFwAf8B6AG1
        AXAB/wHoAbUBcAH/AegBtQFwAf8B6AG1AXAB/wHoAbUBcAH/AegBtQFwAf8BgAF2AWgB/wM4AVsIAAMn
        ATkBRwFQAcAB8QE2AUMB9AH/ATYBQwH0Af8BNgFDAfQB/wFMAVMBsQHrAyEBMAgAAyEBLwFMAVMBsQHr
        ATYBQwH0Af8BNgFDAfQB/wE2AUMB9AH/AUcBUAHAAfEDJwE6iAADOQFdAWoBYwFYAf8BuwGYAVwB/wHE
        AZ8BbQH/AcQBnwFtAf8BxAGfAW0B/wHEAZ8BbQH/AcQBnwFtAf8BxAGfAW0B/wHEAZ8BbQH/AXcBcAFn
        Af8DOAFbCAABUAFUAaQB5gE2AUMB9AH/ATYBQwH0Af8BNgFDAfQB/wFMAVMBsQHrAyEBLxAAAyEBLwFM
        AVMBsQHrATYBQwH0Af8BNgFDAfQB/wE2AUMB9AH/AVABVAGkAeaIAAM5AV0CWwFcAf8DZgH/A2YB/wNm
        Af8DZgH/A2YB/wFcAW8BeAH/AUMBhgGjAf8BQwGGAaMB/wFhAWsBbwH/AzgBWwgAAVQBWAF/AdMBNgFD
        AfQB/wE2AUMB9AH/AUwBUwGxAesDIQEvGAADIQEvAUwBUwGxAesBNgFDAfQB/wE2AUMB9AH/AVQBWAF/
        AdOIAAMjATICVwFYAfQDZgH/A2YB/wNmAf8DZgH/A2YB/wFkAWcBaQH/AV4BbQFzAf8BXgFtAXMB/wFi
        AmMB8wMiATEIAAMWAR4BVgFZAXsBzgFSAVcBjQHcAyEBMCAAAyEBLwFWAVkBjgHbAVcBWgF6Ac8DFgEe
        gAABQgFNAT4HAAE+AwABKAMAAUADAAEQAwABAQEAAQEFAAGAFwAD/wEAAcABAwEPAfAEAAHAAQMBBwHg
        BAABwAIDAcAEAAHAAQMBAQGABAABwAEDAYABAQQAAcABAwHAAQMEAAHAAQMB4AEHBAABwAEDAfABDwQA
        AcABAwHwAQ8EAAHAAQMB4AEHBAABwAEDAcABAwQAAcABAwGAAQEEAAHAAQMBAQGABAABwAIDAcAEAAHA
        AQMBBwHgBAABwAEDAQ8B8AQACw==
</value>
  </data>
</root>